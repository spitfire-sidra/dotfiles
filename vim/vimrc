" General VIMRC

syntax on

" config cursor
set gcr=a:blinkon0
set gcr=n:blinkon0
set cursorline
set cursorcolumn


set nocompatible
set backspace=2

set encoding=utf-8
set foldlevelstart=0
set laststatus=2
set modeline
set showtabline=2
set t_Co=256
" in case t_Co alone doesn't work, add this as well:
" let &t_AB="\e[48;5;%dm"
" let &t_AF="\e[38;5;%dm"
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set expandtab
set encoding=utf-8

let mapleader=","
let maplocalleader="\\"

set background=dark
set scrolloff=5

colorscheme kalisi

" set background to black
highlight Normal ctermfg=grey ctermbg=black

" Global Key Mapping {{{

" Key map with leader key
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

" Quote one word
nnoremap <leader>" viw<esc>a"<esc>hbi"<esc>lbl
nnoremap <leader>' viw<esc>a'<esc>hbi'<esc>lbl

" Quote line
nnoremap <leader>l" ^i"<esc>$a"<esc>^
nnoremap <leader>l' ^i'<esc>$a'<esc>^

" Upper case
nnoremap <leader>U viwU<esc>

" Lower case
nnoremap <leader>u viwu<esc>

" Move a line of text using ALT+[jk]
nmap <A-j> :.m.+1<CR>
nmap <A-k> :.m.-2<CR>

" Move a line of text using ALT+[jk], mac os only
nnoremap ∆ :m .+1<CR>
nnoremap ˚ :m .-2<CR>

" normal key map
nnoremap <space> za
" space = -
" tab   = >-
nnoremap <F2> :<C-U>setlocal lcs=tab:>-,trail:-,eol:$ list! list? <CR>
nnoremap <F3> :set invpaste paste?<CR>
nmap <F4> :set invnumber<CR>
nmap <F5> :set hls!<CR>:set hls?<CR>
nnoremap <F6> :set ignorecase!<CR>
" <F7> flake8
nnoremap <F8> :TagbarToggle<CR>
nnoremap <F9> :IndentLinesToggle<CR>
" vim tab pages
nnoremap <leader><Left> :tabprevious<CR>
nnoremap <leader><Right> :tabnext<CR>
" }}}


" Vundle {{{

filetype off " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" plugins
Plugin 'scrooloose/nerdtree'
let NERDTreeIgnore=['\.pyc']
map <C-n> :NERDTreeToggle<CR>

Plugin 'bling/vim-airline'
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled=1

Plugin 'kien/ctrlp.vim'
set wildignore+=*.so,*.swp,*.zip,*.pyc,*.png,*.jpg,*.gif     " MacOSX/Linux
set wildignore+=*.swp,*.zip,*.exe,*.pyc,*.png,*.jpg,*.gif  " Windows

let g:ctrlp_custom_ignore='\v[\/]\.(git|hg|svn)$'
let g:ctrlp_custom_ignore='\v\.(exe|so|dll)$'

Plugin 'nvie/vim-flake8'
let g:flake8_quickfix_height=10
"let g:flake8_show_in_gutter=1

Plugin 'othree/html5.vim'
Plugin 'othree/html5-syntax.vim'

Plugin 'python.vim'

Plugin 'matchit.zip'

Plugin 'majutsushi/tagbar'

Plugin 'ap/vim-css-color'

Plugin 'Yggdroot/indentLine'
let g:indentLine_enabled=0
let g:indentLine_char='︙'

Plugin 'easymotion/vim-easymotion'
nmap s <Plug>(easymotion-s)
nmap s <Plug>(easymotion-s2)

" UltiSnips, >= vim 7.4 required
" Track the engine.
"Plugin 'SirVer/ultisnips'

" Snippets are separated from the engine. Add this if you want them:
"Plugin 'honza/vim-snippets'

"let g:UltiSnipsExpandTrigger="<leader><tab>"
"let g:UltiSnipsJumpForwardTrigger="<leader><tab>"
"let g:UltiSnipsJumpBackwardTrigger="<leader><s-tab>"

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" }}}

" remove tailing spaces when save file
autocmd BufWritePre * :%s/\s\+$//e
